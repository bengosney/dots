{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","pixelSize","height","width","mouseX","mouseY","effectMod","strengthMod","openSimplex","OpenSimplexNoise","Date","now","drawing","ctx","updateWindowDimensions","bind","assertThisInitialized","startts","getTS","_this2","canvas","refs","getContext","addEventListener","e","setState","clientX","clientY","rAF","requestAnimationFrame","updateAnimationState","window","rect","getBoundingClientRect","_window","innerWidth","innerHeight","cancelAnimationFrame","removeEventListener","ts","clearFrame","drawDots","nextFrame","_this3","_this$state","fillStyle","fillRect","getTime","value","r1","r2","x","y","dx","x1","y1","x2","y2","a","mag","Math","sqrt","_this$state2","effect","min","distance","dist","mod","max","pos","move","beginPath","arc","PI","fill","_this4","_this$state3","noise2D","react_default","createElement","className","ref","htmlFor","name","onChange","target","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6761a2db.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport OpenSimplexNoise from 'open-simplex-noise';\n\n\nclass App extends Component {\n    constructor(props) {\n\tsuper(props);\n\n\tthis.state = {\n\t    pixelSize: 8,\n\t    height: 500,\n\t    width: 150,\n\t    mouseX: 0,\n\t    mouseY: 0,\n\t    effectMod: 2,\n\t    strengthMod: 15,\n\t    openSimplex: new OpenSimplexNoise(Date.now())\n\t};\n\t\n\tthis.drawing = false;\n\tthis.ctx = null;\n\n\tthis.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n\tthis.startts = this.getTS();\n    }\n\n    \n    componentDidMount() {\n\tconst canvas = this.refs.canvas;\n\tthis.canvas = canvas;\n\tthis.ctx = canvas.getContext(\"2d\");\n\n\tcanvas.addEventListener('mousemove', (e) => {\n\t    this.setState({\n\t\tmouseX: e.clientX,\n\t\tmouseY: e.clientY\n\t    });\n\t});\n\n\tthis.rAF = requestAnimationFrame(() => this.updateAnimationState());\n\tthis.updateWindowDimensions();\n\twindow.addEventListener('resize', this.updateWindowDimensions);\n    }\n    \n    updateWindowDimensions() {\n\tconst rect = this.canvas.getBoundingClientRect();\n\tconst { innerWidth, innerHeight } = window;\n\tconst { width, height } = rect;\n\t\n\tthis.setState({ width: width, height: height });\n    }\n    \n    componentWillUnmount() {\n\tcancelAnimationFrame(this.rAF);\n\twindow.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateAnimationState() {\n\tthis.ts = this.getTS();\n\tthis.clearFrame();\n\n\tthis.drawDots();\n\t\n\tthis.nextFrame();\n    }\n\n    nextFrame() {\n\tthis.rAF = requestAnimationFrame(() => this.updateAnimationState());\n    }\n\n    clearFrame() {\n\tconst { width, height } = this.state;\n\tconst { ctx } = this;\n\n\tctx.fillStyle = \"#000000\";\n\tctx.fillRect(0, 0, width, height);\n    }\n    \n    getTS() {\n\tconst date = new Date();\n\t\n\treturn date.getTime();\n    }\n\n    convertRange( value, r1, r2 ) { \n\treturn ( value - r1[ 0 ] ) * ( r2[ 1 ] - r2[ 0 ] ) / ( r1[ 1 ] - r1[ 0 ] ) + r2[ 0 ];\n    }\n\n    move(x, y, dx, x1, y1, x2, y2) {\n\tconst a = {x: x2 - x1, y: y2 - y1};\n        let mag = Math.sqrt(a.x*a.x + a.y*a.y);\n\t\n\tif (mag == 0) {\n            a.x = a.y = 0;\n\t} else {\n            a.x = a.x/mag*dx;\n            a.y = a.y/mag*dx;\n\t}\n\t\n\treturn {x: x + a.x, y: y + a.y};\n    }\n\n    drawDots() {\n\tconst gap = 25;\n\tconst r = 3;\n\tconst { width, height, mouseX, mouseY, effectMod, strengthMod } = this.state;\n\tconst effect = Math.min(width, height) * effectMod;\n\tconst { ctx } = this;\n\n\tconst distance = (x1, y1, x2, y2) => {\n\t    const x = x1 - x2;\n\t    const y = y1 - y2;\n\n\t    return Math.sqrt( x * x + y * y);\n\t};\n\n\tfor (let x = 0 ; x < width ; x += gap) {\n\t    for (let y = 0 ; y < height ; y += gap) {\n\t\tconst dist = distance(x, y, mouseX, mouseY);\n\n\t\tconst mod = Math.max(0, (effect - dist) / (strengthMod * (width / 300)));\n\t\tconst pos = this.move(x, y, mod, mouseX, mouseY, x, y);\n\t\t\n\t\tctx.beginPath();\n\t\tctx.fillStyle = \"#ffffff\";\n\t\tctx.arc(pos.x, pos.y, r, 0, 2 * Math.PI);\n\t\tctx.fill();\n\t    }\n\t}\n    }\n    \n    render() {\n\tconst { width, height, openSimplex, effectMod, strengthMod } = this.state;\n\n\tconst val = openSimplex.noise2D(1, 1) + 1;\n        \n        return (\n\t    <div className={ 'grid' }>\n              <div className={ 'dots' }>\n\t\t<canvas ref=\"canvas\" width={ width } height={ height } />\n\t      </div>\n\t      <div className={ 'controls' }>\n\t\t<h2>Controls</h2>\n\t\t<div>\n\t\t  <label htmlFor={ 'area' }>Area Mod</label><br />\n\t\t  <input name={ 'area' } value={ effectMod } onChange={ e => this.setState({ effectMod: e.target.value }) } />\n\t\t</div>\n\t\t<div>\n\t\t  <label htmlFor={ 'strength' }>Strength Mod</label><br />\n\t\t  <input name={ 'strength' } value={ strengthMod } onChange={ e => this.setState({ strengthMod: e.target.value }) } />\n\t\t</div>\n\t      </div>\n            </div>\n\t);\t\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}