{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","pixelSize","height","width","mouseX","mouseY","mouseEvent","effectMod","strength","strengthCur","mouseOver","gap","r","g","b","a","drawing","ctx","updateWindowDimensions","bind","assertThisInitialized","startts","getTS","_this2","canvas","refs","getContext","addEventListener","e","setState","clientX","clientY","rAF","requestAnimationFrame","updateAnimationState","window","rect","getBoundingClientRect","_window","innerWidth","innerHeight","Math","min","cancelAnimationFrame","removeEventListener","ts","clearFrame","drawDots","nextFrame","_this3","_this$state","clearRect","Date","getTime","value","r1","r2","x","y","dx","x1","y1","x2","y2","mag","sqrt","_this$state2","smallest","curX","curY","borderWidth","borderHeight","scale","sin","cos","dist","distance","mod","max","pos","move","pixelMod","from","to","beginPath","fillStyle","concat","fillRect","_this$state3","react_default","createElement","className","ref","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5bc5cafa.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pixelSize: 1.5,\n            height: 500,\n            width: 150,\n            mouseX: -9999,\n            mouseY: -9999,\n            mouseEvent: 0,\n            effectMod: 2,\n            strength: 40,\n            strengthCur: 0,\n            mouseOver: false,\n            gap: 14,\n            r: 255,\n            g: 255,\n            b: 255,\n            a: .8\n        };\n\n        this.drawing = false;\n        this.ctx = null;\n\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n        this.startts = this.getTS();\n    }\n\n\n    componentDidMount() {\n        const canvas = this.refs.canvas;\n        this.canvas = canvas;\n        this.ctx = canvas.getContext(\"2d\");\n\n        canvas.addEventListener('mousemove', (e) => {\n            this.setState({\n                mouseX: e.clientX,\n                mouseY: e.clientY\n            });\n        });\n\n        canvas.addEventListener('mouseover', () => {\n            this.setState({mouseOver: true, mouseEvent: this.getTS()});\n        });\n\n        canvas.addEventListener('mouseleave', () => {\n            this.setState({mouseOver: false, mouseEvent: this.getTS()});\n        });\n\n        this.rAF = requestAnimationFrame(() => this.updateAnimationState());\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions() {\n        const rect = this.canvas.getBoundingClientRect();\n        const {innerWidth, innerHeight} = window;\n        const {width, height} = rect;\n\n        this.setState({width: Math.min(width, innerWidth), height: Math.min(height, innerHeight)});\n    }\n\n    componentWillUnmount() {\n        cancelAnimationFrame(this.rAF);\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateAnimationState() {\n        this.ts = this.getTS();\n        this.clearFrame();\n\n        this.drawDots();\n\n        this.nextFrame();\n    }\n\n    nextFrame() {\n        this.rAF = requestAnimationFrame(() => this.updateAnimationState());\n    }\n\n    clearFrame() {\n        const {width, height} = this.state;\n        const {ctx} = this;\n\n        ctx.clearRect(0, 0, width, height);\n    }\n\n    getTS() {\n        const date = new Date();\n\n        return date.getTime();\n    }\n\n    convertRange(value, r1, r2) {\n        return (value - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\n    }\n\n    move(x, y, dx, x1, y1, x2, y2) {\n        const a = {x: x2 - x1, y: y2 - y1};\n        let mag = Math.sqrt(a.x * a.x + a.y * a.y);\n\n        if (mag === 0) {\n            a.x = a.y = 0;\n        } else {\n            a.x = a.x / mag * dx;\n            a.y = a.y / mag * dx;\n        }\n\n        return {x: x + a.x, y: y + a.y};\n    }\n\n    distance(x1, y1, x2, y2) {\n        const x = x1 - x2;\n        const y = y1 - y2;\n\n        return Math.sqrt(x * x + y * y);\n    };\n\n    scale(value, r1, r2) {\n        return (value - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\n    }\n\n    drawDots() {\n        const {width, height, mouseX, mouseY, mouseOver } = this.state;\n        const {ctx} = this;\n        const ts = this.getTS() / 1000;\n\n        const smallest = Math.min(width, height);\n        const strength = Math.min(smallest / 15, 40);\n        const gap = Math.min(smallest / 50, 15);\n        const pixelSize = 1;\n\n        let curX = mouseX;\n        let curY = mouseY;\n        if (!mouseOver) {\n            const border = 7.5;\n            const borderWidth = width / border;\n            const borderHeight = height / border;\n            curX = this.scale(Math.sin(ts), [-1, 1], [borderWidth, width - borderWidth]);\n            curY = this.scale(Math.cos(ts), [-1, 1], [borderHeight, height - borderHeight]);\n        }\n\n        for (let x = 0; x < width; x += gap) {\n            for (let y = 0; y < height; y += gap) {\n                const dist = this.distance(x, y, curX, curY);\n\n                const mod = Math.max(0, strength);\n                const pos = this.move(x, y, mod, curX, curY, x, y);\n\n                const pixelMod = this.scale(dist, [0, width], [0, gap]);\n\n                const from = [242, 51, 168];\n                const to = [7, 197, 209];\n\n                const r = this.scale(dist, [0, width * .75], [from[0], to[0]]);\n                const g = this.scale(dist, [0, width * .75], [from[1], to[1]]);\n                const b = this.scale(dist, [0, width * .75], [from[2], to[2]]);\n                const a = .8;\n\n                ctx.beginPath();\n                ctx.fillStyle = `rgba(${r}, ${g}, ${b}, ${a})`;\n                ctx.fillRect(pos.x, pos.y, pixelSize + pixelMod, pixelSize + pixelMod);\n            }\n        }\n    }\n\n    render() {\n        const {width, height } = this.state;\n\n        return (\n            <div className={'grid'}>\n                <div className={'dots'}>\n                    <canvas ref=\"canvas\" width={width} height={height}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}