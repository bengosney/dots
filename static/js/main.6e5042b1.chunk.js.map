{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","pixelSize","height","width","mouseX","mouseY","mouseEvent","effectMod","strength","strengthCur","mouseOver","gap","r","g","b","a","drawing","ctx","updateWindowDimensions","bind","assertThisInitialized","startts","getTS","_this2","canvas","refs","getContext","addEventListener","e","setState","clientX","clientY","rAF","requestAnimationFrame","updateAnimationState","window","rect","getBoundingClientRect","_window","innerWidth","innerHeight","Math","min","cancelAnimationFrame","removeEventListener","ts","clearFrame","drawDots","nextFrame","_this3","_this$state","clearRect","Date","getTime","value","r1","r2","x","y","dx","x1","y1","x2","y2","mag","sqrt","_this$state2","_this$state3","curStrength","timeMod","max","distance","mod","pos","move","beginPath","fillStyle","concat","fillRect","_this4","_this$state4","_this$state5","react_default","createElement","className","ref","htmlFor","name","onChange","target","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6e5042b1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n\tsuper(props);\r\n\r\n\tthis.state = {\r\n\t    pixelSize: 1.5,\r\n\t    height: 500,\r\n\t    width: 150,\r\n\t    mouseX: -9999,\r\n\t    mouseY: -9999,\r\n\t    mouseEvent: 0,\r\n\t    effectMod: 2,\r\n\t    strength: 40,\r\n\t    strengthCur: 0,\r\n\t    mouseOver: false,\r\n\t    gap: 14,\r\n\t    r: 255,\r\n\t    g: 255,\r\n\t    b: 255,\r\n\t    a: .8\r\n\t};\r\n\t\r\n\tthis.drawing = false;\r\n\tthis.ctx = null;\r\n\r\n\tthis.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n\tthis.startts = this.getTS();\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n\tconst canvas = this.refs.canvas;\r\n\tthis.canvas = canvas;\r\n\tthis.ctx = canvas.getContext(\"2d\");\r\n\r\n\tcanvas.addEventListener('mousemove', (e) => {\r\n\t    this.setState({\r\n\t\tmouseX: e.clientX,\r\n\t\tmouseY: e.clientY\r\n\t    });\r\n\t});\r\n\r\n\tcanvas.addEventListener('mouseover', () => {\r\n\t    this.setState({mouseOver: true, mouseEvent: this.getTS()});\r\n\t});\r\n\t\r\n\tcanvas.addEventListener('mouseleave', () => {\r\n\t    this.setState({mouseOver: false, mouseEvent: this.getTS()});\r\n\t});\r\n\r\n\tthis.rAF = requestAnimationFrame(() => this.updateAnimationState());\r\n\tthis.updateWindowDimensions();\r\n\twindow.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n    \r\n    updateWindowDimensions() {\r\n\tconst rect = this.canvas.getBoundingClientRect();\r\n\tconst { innerWidth, innerHeight } = window;\r\n\tconst { width, height } = rect;\r\n\t\r\n\tthis.setState({ width: Math.min(width, innerWidth), height: Math.min(height, innerHeight) });\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n\tcancelAnimationFrame(this.rAF);\r\n\twindow.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    updateAnimationState() {\r\n\tthis.ts = this.getTS();\r\n\tthis.clearFrame();\r\n\r\n\tthis.drawDots();\r\n\t\r\n\tthis.nextFrame();\r\n    }\r\n\r\n    nextFrame() {\r\n\tthis.rAF = requestAnimationFrame(() => this.updateAnimationState());\r\n    }\r\n\r\n    clearFrame() {\r\n\tconst { width, height } = this.state;\r\n\tconst { ctx } = this;\r\n\r\n\tctx.clearRect(0, 0, width, height);\r\n    }\r\n    \r\n    getTS() {\r\n\tconst date = new Date();\r\n\t\r\n\treturn date.getTime();\r\n    }\r\n\r\n    convertRange( value, r1, r2 ) { \r\n\treturn ( value - r1[ 0 ] ) * ( r2[ 1 ] - r2[ 0 ] ) / ( r1[ 1 ] - r1[ 0 ] ) + r2[ 0 ];\r\n    }\r\n\r\n    move(x, y, dx, x1, y1, x2, y2) {\r\n\tconst a = {x: x2 - x1, y: y2 - y1};\r\n        let mag = Math.sqrt(a.x*a.x + a.y*a.y);\r\n\t\r\n\tif (mag == 0) {\r\n            a.x = a.y = 0;\r\n\t} else {\r\n            a.x = a.x/mag*dx;\r\n            a.y = a.y/mag*dx;\r\n\t}\r\n\t\r\n\treturn {x: x + a.x, y: y + a.y};\r\n    }\r\n\r\n    distance(x1, y1, x2, y2) {\r\n\tconst x = x1 - x2;\r\n\tconst y = y1 - y2;\r\n\t\r\n\treturn Math.sqrt( x * x + y * y);\r\n    };\r\n\r\n    drawDots() {\r\n\tconst { width, height, mouseX, mouseY, mouseEvent, mouseOver, effectMod, strength, pixelSize, gap } = this.state;\r\n\tconst { r, g, b, a } = this.state;\r\n\tconst effect = Math.min(width, height) * effectMod;\r\n\tconst { ctx } = this;\r\n\r\n\tlet curStrength = strength;\r\n\tconst timeMod = (this.getTS() - mouseEvent) / 3;\r\n\t\r\n\tif (mouseOver) {\r\n\t    curStrength = Math.min(strength, timeMod);\r\n\t} else {\r\n\t    curStrength = Math.max(0, (strength - timeMod));\r\n\t}\r\n\r\n\tfor (let x = 0 ; x < width ; x += gap) {\r\n\t    for (let y = 0 ; y < height ; y += gap) {\r\n\t\tconst dist = this.distance(x, y, mouseX, mouseY);\r\n\r\n\t\tconst mod = Math.max(0, curStrength);\r\n\t\tconst pos = this.move(x, y, mod, mouseX, mouseY, x, y);\r\n\t\t\r\n\t\tctx.beginPath();\r\n\t\tctx.fillStyle = `rgba(${r}, ${g}, ${b}, ${a})`;\r\n\t\tctx.fillRect(pos.x, pos.y, pixelSize, pixelSize);\r\n\t    }\r\n\t}\r\n    }\r\n    \r\n    render() {\r\n\tconst { width, height, effectMod, strength, pixelSize, gap } = this.state;\r\n\tconst { r, g, b, a } = this.state;\r\n        \r\n        return (\r\n\t    <div className={ 'grid' }>\r\n              <div className={ 'dots' }>\r\n\t\t<canvas ref=\"canvas\" width={ width } height={ height } />\r\n\t      </div>\r\n\t      <div className={ 'controls' }>\r\n\t\t<h2>Controls</h2>\r\n\t\t<div>\r\n\t\t  <label htmlFor={ 'area' }>Area Effected</label><br />\r\n\t\t  <input name={ 'area' } value={ effectMod } onChange={ e => this.setState({ effectMod: e.target.value }) } />\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t  <label htmlFor={ 'strength' }>Strength</label><br />\r\n\t\t  <input name={ 'strength' } value={ strength } onChange={ e => this.setState({ strength: e.target.value }) } />\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t  <label htmlFor={ 'size' }>Dot Size</label><br />\r\n\t\t  <input name={ 'size' } value={ pixelSize } onChange={ e => this.setState({ pixelSize: e.target.value }) } />\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t  <label htmlFor={ 'gap' }>Gap Size</label><br />\r\n\t\t  <input name={ 'gap' } value={ gap } onChange={ e => this.setState({ gap: e.target.value }) } />\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t  <label>Colour</label><br />\r\n\t\t  <div className={ 'row' } >\r\n\t\t    <input className={ 'small' } value={ r } onChange={ e => this.setState({ r: e.target.value }) } />\r\n                    <input className={ 'small' } value={ g } onChange={ e => this.setState({ g: e.target.value }) } />\r\n\t\t    <input className={ 'small' } value={ b } onChange={ e => this.setState({ b: e.target.value }) } />\r\n\t\t    <input className={ 'small' } value={ a } onChange={ e => this.setState({ a: e.target.value }) } />\r\n\t\t  </div>\r\n\t\t</div>\r\n\t      </div>\r\n            </div>\r\n\t);\t\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}