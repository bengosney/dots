{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","pixelSize","height","width","mouseX","mouseY","mouseEvent","effectMod","strength","strengthCur","mouseOver","gap","r","g","b","a","drawing","ctx","updateWindowDimensions","bind","assertThisInitialized","startts","getTS","_this2","canvas","refs","getContext","addEventListener","e","setState","clientX","clientY","rAF","requestAnimationFrame","updateAnimationState","window","rect","getBoundingClientRect","_window","innerWidth","innerHeight","Math","min","cancelAnimationFrame","removeEventListener","ts","clearFrame","drawDots","nextFrame","_this3","_this$state","clearRect","Date","getTime","value","r1","r2","x","y","dx","x1","y1","x2","y2","mag","sqrt","_this$state2","_this$state3","curStrength","curX","curY","quarterWidth","quarterHeight","scale","sin","cos","dist","distance","mod","max","pos","move","pixelMod","from","to","modr","modg","modb","beginPath","fillStyle","concat","fillRect","_this4","_this$state4","_this$state5","react_default","createElement","className","ref","htmlFor","name","onChange","target","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df9dc3c8.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pixelSize: 1.5,\n            height: 500,\n            width: 150,\n            mouseX: -9999,\n            mouseY: -9999,\n            mouseEvent: 0,\n            effectMod: 2,\n            strength: 40,\n            strengthCur: 0,\n            mouseOver: false,\n            gap: 14,\n            r: 255,\n            g: 255,\n            b: 255,\n            a: .8\n        };\n\n        this.drawing = false;\n        this.ctx = null;\n\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n        this.startts = this.getTS();\n    }\n\n\n    componentDidMount() {\n        const canvas = this.refs.canvas;\n        this.canvas = canvas;\n        this.ctx = canvas.getContext(\"2d\");\n\n        canvas.addEventListener('mousemove', (e) => {\n            this.setState({\n                mouseX: e.clientX,\n                mouseY: e.clientY\n            });\n        });\n\n        canvas.addEventListener('mouseover', () => {\n            this.setState({mouseOver: true, mouseEvent: this.getTS()});\n        });\n\n        canvas.addEventListener('mouseleave', () => {\n            this.setState({mouseOver: false, mouseEvent: this.getTS()});\n        });\n\n        this.rAF = requestAnimationFrame(() => this.updateAnimationState());\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions() {\n        const rect = this.canvas.getBoundingClientRect();\n        const {innerWidth, innerHeight} = window;\n        const {width, height} = rect;\n\n        this.setState({width: Math.min(width, innerWidth), height: Math.min(height, innerHeight)});\n    }\n\n    componentWillUnmount() {\n        cancelAnimationFrame(this.rAF);\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateAnimationState() {\n        this.ts = this.getTS();\n        this.clearFrame();\n\n        this.drawDots();\n\n        this.nextFrame();\n    }\n\n    nextFrame() {\n        this.rAF = requestAnimationFrame(() => this.updateAnimationState());\n    }\n\n    clearFrame() {\n        const {width, height} = this.state;\n        const {ctx} = this;\n\n        ctx.clearRect(0, 0, width, height);\n    }\n\n    getTS() {\n        const date = new Date();\n\n        return date.getTime();\n    }\n\n    convertRange(value, r1, r2) {\n        return (value - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\n    }\n\n    move(x, y, dx, x1, y1, x2, y2) {\n        const a = {x: x2 - x1, y: y2 - y1};\n        let mag = Math.sqrt(a.x * a.x + a.y * a.y);\n\n        if (mag == 0) {\n            a.x = a.y = 0;\n        } else {\n            a.x = a.x / mag * dx;\n            a.y = a.y / mag * dx;\n        }\n\n        return {x: x + a.x, y: y + a.y};\n    }\n\n    distance(x1, y1, x2, y2) {\n        const x = x1 - x2;\n        const y = y1 - y2;\n\n        return Math.sqrt(x * x + y * y);\n    };\n\n    scale(value, r1, r2) {\n        return (value - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\n    }\n\n    drawDots() {\n        const {width, height, mouseX, mouseY, mouseEvent, mouseOver, effectMod, strength, pixelSize, gap} = this.state;\n        const {r, g, b, a} = this.state;\n        const effect = Math.min(width, height) * effectMod;\n        const {ctx} = this;\n\n        const curStrength = strength;\n        const timeMod = (this.getTS() - mouseEvent) / 3;\n\n        let curX = mouseX;\n        let curY = mouseY;\n\n        if (!mouseOver) {\n            const ts = this.getTS() / 1000;\n            const quarterWidth = width / 4;\n            const quarterHeight = height / 4;\n            curX = this.scale(Math.sin(ts), [-1, 1], [quarterWidth, width - quarterWidth]);\n            curY = this.scale(Math.cos(ts), [-1, 1], [quarterHeight, height - quarterHeight]);\n        }\n\n        for (let x = 0; x < width; x += gap) {\n            for (let y = 0; y < height; y += gap) {\n                const dist = this.distance(x, y, curX, curY);\n\n                const mod = Math.max(0, curStrength);\n                const pos = this.move(x, y, mod, curX, curY, x, y);\n\n                const pixelMod = this.scale(dist, [0, width], [0, gap]);\n\n                const from = [7, 197, 209];\n                const to = [242, 51, 168];\n                const modr = this.scale(dist, [0, width], [from[0], to[0]]);\n                const modg = this.scale(dist, [0, width], [from[1], to[1]]);\n                const modb = this.scale(dist, [0, width], [from[2], to[2]]);\n\n                ctx.beginPath();\n                ctx.fillStyle = `rgba(${modr}, ${modg}, ${modb}, ${a})`;\n                ctx.fillRect(pos.x, pos.y, pixelSize + pixelMod, pixelSize + pixelMod);\n            }\n        }\n    }\n\n    render() {\n        const {width, height, effectMod, strength, pixelSize, gap} = this.state;\n        const {r, g, b, a} = this.state;\n\n        return (\n            <div className={'grid'}>\n                <div className={'dots'}>\n                    <canvas ref=\"canvas\" width={width} height={height}/>\n                </div>\n                <div className={'controls'}>\n                    <h2>Controls</h2>\n                    <div>\n                        <label htmlFor={'area'}>Area Effected</label><br/>\n                        <input name={'area'} value={effectMod}\n                               onChange={e => this.setState({effectMod: e.target.value})}/>\n                    </div>\n                    <div>\n                        <label htmlFor={'strength'}>Strength</label><br/>\n                        <input name={'strength'} value={strength}\n                               onChange={e => this.setState({strength: e.target.value})}/>\n                    </div>\n                    <div>\n                        <label htmlFor={'size'}>Dot Size</label><br/>\n                        <input name={'size'} value={pixelSize}\n                               onChange={e => this.setState({pixelSize: e.target.value})}/>\n                    </div>\n                    <div>\n                        <label htmlFor={'gap'}>Gap Size</label><br/>\n                        <input name={'gap'} value={gap} onChange={e => this.setState({gap: e.target.value})}/>\n                    </div>\n                    <div>\n                        <label>Colour</label><br/>\n                        <div className={'row'}>\n                            <input className={'small'} value={r} onChange={e => this.setState({r: e.target.value})}/>\n                            <input className={'small'} value={g} onChange={e => this.setState({g: e.target.value})}/>\n                            <input className={'small'} value={b} onChange={e => this.setState({b: e.target.value})}/>\n                            <input className={'small'} value={a} onChange={e => this.setState({a: e.target.value})}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}